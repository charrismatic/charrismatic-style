
// Color Classes
@each $color_name, $color in $material_colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" {
      .bg-#{$color_name} { background-color: $color_value !important; }
      .color-#{$color_name} { color: $color_value !important; }
    }
    @else if $color_name != "shades" {
      .bg-#{$color_name}.#{$color_type} { background-color: $color_value !important; }
      .color-#{$color_name}-text.text-#{$color_type} { color: $color_value !important; }
    }
  }
}

// Shade classes
@each $color, $color_value in $material_shades {
  .bg-#{$color} { background-color: $color_value !important; }
  .color-#{$color} { color: $color_value !important; }
}

// usage: color("name_of_color", "type_of_color")
// to avoid to repeating map-get($colors, ...)
@function color($color, $type) {
  @if map-has-key($colors, $color) {
    $curr_color: map-get($colors, $color);
    @if map-has-key($curr_color, $type) {
      @return map-get($curr_color, $type);
    }
  }
  @warn "Unknown `#{$color}` - `#{$type}` in $colors.";
  @return null;
}

// Color Classes
@each $color_name, $color in $material_colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" { .bg-#{$color_name} { background-color: $color_value !important; }}
    @else if $color_name != "shades" { .bg-#{$color_name}-#{$color_type} { background-color: $color_value !important; } }
  }
}
// Color Classes
@each $color_name, $color in $material_colors {
  @each $color_type, $color_value in $color {
    @if $color_type == "base" { .cl-#{$color_name} { color: $color_value !important; } }
    @else if $color_name != "shades" { .cl-#{$color_name}-#{$color_type} { color: $color_value !important; } }
  }
}

// Shade classes
@each $color, $color_value in $material_shades { .bg-#{$color} { background-color: $color_value !important; } }
@each $color, $color_value in $material_shades { .cl-#{$color} { color: $color_value !important; } }
