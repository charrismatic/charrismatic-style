///*---
/// title: Flex Helpers
/// section: Layout
/// ---
/// ## WRAP
///   ADDING FLEX WRAP BREAKS THE ROW INTO A GRID AFTER THE CONTAINER
///   REACHES 100%, IT ALSO RESETS THE FIRST AND LAST CHILD MARGINS TO MATCH THE
///   REST OF THE ELEMENTS
///
/// - flex_wrap { flex-wrap: wrap; }
/// - flex_nowrap { flex-wrap: nowrap; }
///
///
/// FLEX ALIGN AND DISTRIBUTE
///
/// SELF
///
/// - fl_self--end      - justify-self: flex-end
/// - fl_self--start    - justify-self: flex-start
/// - fl_self--center   - justify-self: center
/// - fl_self--top      - align-self: flex-start
/// - fl_self--bottom   - align-self: flex-end
/// - fl_self--middle   - align-self: center
///
/// ALIGN ITEMS
///
/// - fl_align--stretch - align-items: stretch
/// - fl_align--center  - align-items: center
/// - fl_align--start   - align-items: flex-start
/// - fl_align--end     - align-items: flex-end
///
/// JUSTIFY CONTENT
///
///
/// _Shorthand_
///
/// - fl--distribute    - justify-content: space-around
/// - fl--spread        - justify-content: space-between
/// - fl--start         - justify-content: flex-start
/// - fl--end           - justify-content: flex-end
///
/// _Full Name_
///
/// - flex_start        - justify-content: flex-start
/// - flex_end          - justify-content: flex-end
/// - flex_center       - justify-content: center
/// - flex_between      - justify-content: space-between
/// - flex_around       - justify-content: space-around
///
///
///ELEMENT SIZING
///
///- fl_grow           - flex-grow: 1
///- fl_shrink         - flex-shrink: 1
///- fl--equal         - flex-basis: 0
///- fl--fill          - flex-basis: 100%
///- fl--auto          - flex-basis: auto
///- flex_grow         - flex-grow: 1
///- flex_shrink       - flex-shrink: 1
///- flex_basis-none   - flex-basis: 0;
///- flex_basis-max    - flex-basis: 100%
///- flexible          - flex: 1 1 auto
///
///FLEX BASIS
///
///- fl_10  - flex-basis: 10%
///- fl_15  - flex-basis: 15%
///- fl_20  - flex-basis: 20%
///- fl_25  - flex-basis: 25%
///- fl_30  - flex-basis: 30%
///- fl_35  - flex-basis: 35%
///- fl_40  - flex-basis: 40%
///- fl_45  - flex-basis: 45%
///- fl_50  - flex-basis: 50%
///- fl_55  - flex-basis: 55%
///- fl_60  - flex-basis: 60%
///- fl_65  - flex-basis: 65%
///- fl_70  - flex-basis: 70%
///- fl_75  - flex-basis: 75%
///- fl_80  - flex-basis: 80%
///- fl_85  - flex-basis: 85%
///- fl_90  - flex-basis: 90%
///- fl_95  - flex-basis: 95%
///- fl_100 -  flex-basis: 100
///
/// ### flex-col
///
/// CHANGE FLEX DIRECTION FROM ROW TO COLUMN AND ADJUST CHILD PROPERTIES TO PREVENT
/// VERTICAL COLLAPSE
///
/// ### EXTRAS
///
/// | Class | Description |
/// | ----- | ----------- |
/// | flex-item  | Manually add the properties of a flex > child descedant  |
/// | flex_fit   | Force all child nodes to take up space as required (autofit)  |
/// | flex_equal | Force all child nodes to take up the minimum space possible (equal fit) |
/// | flex_none  | This element will not stretch or shrink  |
///
///*/

/// ----------------
// SEMANTIC CLASSES
// (SPELLED OUT AND NAMED BY PROPERTY)
/// ----------------
.flex {
  // PROPERTIES
  &-wrap { flex-wrap: wrap; }
  &-no-wrap { flex-wrap: nowrap; }

  // SIZING
  &-fill { flex-basis: 100%; }
  &-equal { flex-basis: 0; }
  &-auto { flex-basis: auto; }
  &-basis-full { flex-basis: 100%; }
  &-basis-none { flex-basis: 0; }
  &-basis-auto { flex-basis: auto; }
  &-equal { flex-basis: 0; }
  &-fill { flex-basis: 100%; }
  &-grow { flex-grow: 1; }
  &-no-grow { flex-grow: 0; }
  &-shrink { flex-shrink: 1; }
  &-no-shrink { flex-shrink: 0; }

  // ALIGNMENT
  &-start { justify-content: flex-start; }
  &-end { justify-content: flex-end; }
  &-center { justify-content: center; }
  &-between { justify-content: space-between; }
  &-around { justify-content: space-around; }
  &-distribute { justify-content: space-around; }
  &-spread { justify-content: space-between; }
  &-start { justify-content: flex-start; }
  &-end { justify-content: flex-end; }
}

// GROW, SHRINK, AS LARGE AS POSSIBLE
.flexible { flex: 1 1 auto; }
.shrinkable { flex: 0 1 auto; }


// SHORTHAND CLASSES
// -----------------
// DIRECT MANIUPLATION
.flex_self {
  &-end { justify-self: flex-end; }
  &-start { justify-self: flex-start; }
  &-center { justify-self: center; }
  &-top { align-self: flex-start; }
  &-bottom { align-self: flex-end; }
  &-middle { align-self: center; }
}

// ALIGNMENT
.flex_align {
  &-stretch { align-items: stretch; }
  &-center { align-items: center; }
  &-start { align-items: flex-start; }
  &-end { align-items: flex-end; }
}

// FLEX BY WEIGHT
.flex {
  &-0 { flex: 0; }
  &-1 { flex: 1; }
  &-2 { flex: 2; }
  &-3 { flex: 3; }
  &-4 { flex: 4; }
  &-5 { flex: 5; }
  &-6 { flex: 6; }
  &-7 { flex: 7; }
  &-8 { flex: 8; }
  &-9 { flex: 9; }
}

// FLEX BY PERCENT WIDTH
.flex {
  &-10p { flex-basis: 10% !important; }
  &-15p { flex-basis: 15% !important; }
  &-20p { flex-basis: 20% !important; }
  &-25p { flex-basis: 25% !important; }
  &-30p { flex-basis: 30% !important; }
  &-35p { flex-basis: 35% !important; }
  &-40p { flex-basis: 40% !important; }
  &-45p { flex-basis: 45% !important; }
  &-50p { flex-basis: 50% !important; }
  &-55p { flex-basis: 55% !important; }
  &-60p { flex-basis: 60% !important; }
  &-65p { flex-basis: 65% !important; }
  &-70p { flex-basis: 70% !important; }
  &-75p { flex-basis: 75% !important; }
  &-80p { flex-basis: 80% !important; }
  &-85p { flex-basis: 85% !important; }
  &-90p { flex-basis: 90% !important; }
  &-100p { flex-basis: 100% !important; }
}


//* ---
/// title: Flex Classes
/// section: Layout
/// ---
///
///
/// \*MODIFIER
///
/// __flex-wrap__
///
/// ADDING FLEX WRAP BREAKS THE ROW INTO A GRID AFTER THE CONTAINER
/// REACHES 100%, IT ALSO RESETS THE FIRST AND LAST CHILD MARGINS TO MATCH THE
/// REST OF THE ELEMENTS
///
/// ### flex-col
///
/// CHANGE FLEX DIRECTION FROM ROW TO COLUMN AND ADJUST CHILD PROPERTIES TO PREVENT
/// VERTICAL COLLAPSE
///
/// ### EXTRAS
///
/// | Class | Description |
/// | ----- | ----------- |
/// | flex-item  | Manually add the properties of a flex > child descedant  |
/// | flex_fit   | Force all child nodes to take up space as required (autofit)  |
/// | flex_equal | Force all child nodes to take up the minimum space possible (equal fit) |
/// | flex_none  | This element will not stretch or shrink  |
///
//*/


// FLEX
.flex {
  display: flex;
}


// ALTERNATIVELY USE "> *" TO AUTO FLEX CHILD ELEMENTS
// * CAN CAUSE ISSUES ON LARGER SITES WITH LOTS OF STYLES
$flex_child: "> .flex-item";

/// TEMPLATES

.flex {
  &-fit {
    #{$flex_child} { flex-basis: 100%; }
  }

  &-equal {
    #{$flex_child} { flex-basis: 0; }
  }

  &-none {
    flex-grow: 0;
    flex-shrink: 0;
  }

  #{$flex_child} {
    flex: 0 1 auto;
    margin-left: 1em;
    margin-right: 1em;

    &:first-child { margin-left: 0; }
    &:last-child { margin-right: 0; }
  }

  &-none {
    flex-grow: 0;
    flex-shrink: 0;
  }
}


// INTENDED FOR A SINGLE ROW OR ITEMS STRETCHING LEFT TO RIGHT
.flex-row {
  display: flex;
  flex-direction: row;

  #{$flex_child} {
    flex: 1 1 0;
    margin-left: 1em;
    margin-right: 1em;

    &:first-child { margin-left: 0; }
    &:last-child { margin-right: 0; }
  }

  &.flex-wrap {
    flex-wrap: wrap;

    #{$flex_child} {
      margin: 0 1em;

      // FIRST AND LAST ARE NO LONGER ROW START AND ROW END
      &:first-child { margin-left: 1em; }
      &:last-child { margin-right: 1em; }
    }
  }
}


.no-flex {
  flex-grow: 0;
  flex-shrink: 0;
}
