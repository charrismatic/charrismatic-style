/*---
title: Flex Classes 
section: Layout 
---


Flex Class Groups 

These classes modify the parent and children elements 


### .flex

__flex (Parent)__

```
display: flex;
```

__flex > * (Direct Descendant Children)__

```
flex: 0 1 auto;
margin: 0 1em;
```

### flex-row 


__flex-row (Parent)__

INTENDED FOR A SINGLE ROW OR ITEMS STRETCHING LEFT TO RIGHT 

```
display: flex;
flex-direction: row;
```  
  

__flex-row > * (Direct Descendant Children)__

```
flex: 0 1 auto;
margin: 0 1em;
```

LETS FIRST AND LAST ELEMENTS REACH CONTAINER EDGES 
```
&:first-child { margin-left: 0; }
&:last-child { margin-right: 0;}
```
  
\*MODIFIER

__flex-wrap__

ADDING FLEX WRAP BREAKS THE ROW INTO A GRID AFTER THE CONTAINER   
REACHES 100%, IT ALSO RESETS THE FIRST AND LAST CHILD MARGINS TO MATCH THE   
REST OF THE ELEMENTS  


### flex-col 

CHANGE FLEX DIRECTION FROM ROW TO COLUMN AND ADJUST CHILD PROPERTIES TO PREVENT 
VERTICAL COLLAPSE 



### EXTRAS 

| Class | Description | 
| ----- | ----------- |
| flex-item  | Manually add the properties of a flex > child descedant  |
| flex_fit   | Force all child nodes to take up space as required (autofit)  |
| flex_equal | Force all child nodes to take up the minimum space possible (equal fit) |
| flex_none  | This element will not stretch or shrink  |
 

*/

// GENERAL FLEX PARENT
%flex {
  display: flex;
  > * {
    flex: 0 1 auto;
    margin: 0 1em;
  }
}

// SINGLE ROW FLEX CONTAINER
%fl_row {
  display: flex;
  flex-direction: row;
   > * {
    flex: 0 1 auto;
    margin: 0 1em;
    &:first-child { margin-left: 0; }
    &:last-child { margin-right: 0;}
  }
}


// VERTICAL FLEXIBLE BOX
%_fl_col-parent {
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  margin: .5em 0 0 0;
  padding: 0 0 0 0;
  position: relative;
}

%_fl_col-child {
  position: relative;
  width: 94%;
  flex: 0 1 auto;
  margin: 0 auto 0 auto;
  padding: .5em 0 .5em 0;
}

%fl_col {
  @extend %_fl_col-parent;

  > * {
    @extend %_fl_col-child;

    // FIRST ELEMENT STICKY TO TOP
    &:first-child {
      flex: 0 0 auto;
      padding: 0 0 .5em 0;
    }
    // LAST ELEMENT STICKY TO BOTTOM
    &:last-child {
      flex: 0 0 auto;
      padding: 0.5em 0 0 0;
    }
  }
}



//---------------
//   CLASSES
//---------------
.flex { 
  display: flex;
  > * {
    flex: 0 1 auto;
    margin: 0 1em;
  }
}

// INTENDED FOR A SINGLE ROW OR ITEMS STRETCHING LEFT TO RIGHT 
.flex-row {
  display: flex;
  flex-direction: row;
  
   > * {
    flex: 0 1 auto;
    margin: 0 1em;
    // LET FIRST AND LAST ELEMENTS REACH CONTAINER EDGES 
    &:first-child { margin-left: 0; }
    &:last-child { margin-right: 0;}
  }
  
  &.flex_wrap {
    > * {
     flex: 0 1 auto;
     margin: 0 1em;
     // FIRST AND LAST ARE NO LONGER ROW START AND ROW END
     &:first-child { margin-left: 1em; }
     &:last-child { margin-right: 1em;}
   }
  }
}



// FLEX COLUMN PARENT 
.flex-col { 
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  margin: .5em 0 0 0;
  padding: 0 0 0 0;
  position: relative; 
  
  // FLEX COLUMN CHILD 
  > * {
    position: relative;
    width: 94%;
    flex: 0 1 auto;
    margin: 0 auto 0 auto;
    padding: .5em 0 .5em 0;

    // FIRST ELEMENT STICKY TO TOP
    &:first-child {
      flex: 0 0 auto;
      padding: 0 0 .5em 0;
    }
    // LAST ELEMENT STICKY TO BOTTOM
    &:last-child {
      flex: 0 0 auto;
      padding: 0.5em 0 0 0;
    }
  }
}

.flex-item {
  flex: 0 1 auto;
  margin: 0 1em;
  &:first-child { margin-left: 0; }
  &:last-child { margin-right: 0; }
}

.flex_fit { 
  > * {  flex-basis: 100%; } 
}

.flex_equal { 
  > * { flex-basis: 0; } 
}

.flex_none {
  flex-grow: 0;
  flex-shrink: 0;
}
