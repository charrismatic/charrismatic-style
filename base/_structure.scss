// BASE THEME STRUCTURE AND LAYOUT CLASSES

/***************************************
 *   TYPICAL PAGE STRUCTURE            *
 *                                     *
 *  html > head > body  ...            *
 *                                     *
 *  header                             *
 *   L nav                             *
 *  section [ .banner | .main ]        *
 *   L .row                            *
 *     L .sidebar [ if true ]          *
 *     L .content-block                *
 *       L .content                    *
 *         L .row                      *
 *         L .row                      *
 *     L .content-block [other]        *
 *   L .row                            *
 *     L section [ .special ]          *
 *       L .row                        *
 *     L section [ .others ]           *
 *  footer                             *
 *                                     *
 * note:                               *
 *   -sections can be nested           *
 *   -new sections reset h1 structure  *
 *    in the semantic markup           *
 * * * * * * * * * * * * * * * * * * * */

$max_width: 1400px;

body {
  min-width: 340px;
  // @include max_width(500px) { }
}

section {
  display: block;
  margin: 0 auto;
  padding: 1.5em 0;
  width: 100%;
}

.row {
  display: block;
  margin: 0 auto;
  max-width: $max_width;
  padding: 0 5%;
  width: 90%;
}

.content-block {
  display: block;
  padding: 1em 0;
  width: 100%;

  &:first-of-type {
    padding-top: 0;
  }
}

// SHOW / HIDE
.hide {
   display: none !important;

  &--med {
    @media ( max-width: $banner_break_mid ) {
      display: none !important;
    }
  }

   &--mob-lg {
    @media ( max-width: $width_mobile_device_lg) {
      display: none !important;
    }
  }

  &--mob-sm {
    @media ( max-width: $width_mobile_device_sm ) {
      display: none !important;
    }
  }
}

// @PLACEHOLDER
// EXTEND TO CREATE A NEW FLEX CONTAINER TYPE
%flex {
  display: flex;

  // > button,
  // > div,
  // > li {
  //   flex-grow: 1;
  //   flex-shrink: 1;
  //   flex-basis: 0;
  //   margin: 0 1em;
  // }
  //
  // > button:first-child { margin-left: 0; }
  // > button:last-child { margin-right: 0; }
  //
  // > div:first-child { margin-left: 0; }
  // > div:last-child { margin-right: 0; }
  //
  // > li:first-child { margin-left: 0; }
  // > li:last-child { margin-right: 0; }
  > * {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 100%;
    margin: 0 1em;
  }
}

%fl-row {
  flex-direction: row;
  > * { margin: 0 1em; }
  > *:first-child { margin-left: 0; }
  > *:last-child { margin-right: 0; }
}

%fl-col {
  flex-direction: column;
  width: 100%;
  > * {
    width: 100%;
    flex-basis: 100%;
    margin: 1em 0 1 0;
  }
  > *:first-child { margin: 0 0 0 0; }
  > *:last-child { margin: 0 0 1em 0; }
}

%fl-base--fit { > * { flex-basis: 100%; } }
%fl-base--equal { > * { flex-basis: 0; } }
%fl-flex--none {
  flex-grow: 0;
  flex-shrink: 0;
}

%fl-grid4 {
  display: flex;
  flex-wrap: wrap;
  > * {
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: 19%;
    padding: 0 0 1em 0;
    margin: 0 1%;
    &:nth-child(4n+1){
      margin: 0 0 0 0;
    }
  }
}


// NOTE: THIS COULD BE AN AUTOMATIC BEHAVIOR INCLUDED ABOVE
// BUG: EXTEND IN MEDIA QUERY DOES NOT WORK CURRENTLY
%flex_mobile_stacked {
  flex-wrap: wrap;

  > * {
    flex-basis: 100%;
    margin: 0.5em 0;
  }
}


// FLEX GRID HELPER CLASSES
.flex {
  display: flex;

  @at-root {
    // UL.FLEX HAS LI AS CHILDREN
    ul#{&} {
      > li {
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 0;
        margin: 0 1em;
      }

      > li:first-child {
        margin-left: 0;
      }

      > li:last-child {
        margin-right: 0;
      }
    }

    // DIV or SECTION.FLEX HAS DIV AS CHILDREN
    // section#{&},
    div#{&} {
      > div {
        flex-grow: 1;
        flex-shrink: 1;
        flex-basis: 0;
        margin: 0 1em;
      }

      > div:first-child {
        margin-left: 0;
      }

      > div:last-child {
        margin-right: 0;
      }
    }
  }
}

.fl-col { @extend %fl-col }

.fl-row { flex-direction: row; }
.fl-wrap { flex-wrap: wrap; }
.fl-nowrap { flex-wrap: nowrap; }

.fl0 { flex: 0; }
.fl1 { flex: 1; }
.fl2 { flex: 2; }
.fl3 { flex: 3; }
.fl4 { flex: 4; }
.fl5 { flex: 5; }
.fl6 { flex: 6; }
.fl7 { flex: 7; }
.fl8 { flex: 8; }
.fl9 { flex: 9; }
